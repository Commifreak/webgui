Menu="VMs:0"
Title="Virtual Machines"
Tabs="true"
Cond="(pgrep('libvirtd')!==false)"
---
<?php
$action = array_key_exists('action', $_GET) ? $_GET['action'] : '';
$subaction = array_key_exists('subaction', $_GET) ? $_GET['subaction'] : '';
$uuid = $_GET['uuid'];
if ($_GET['refresh']) {
	$name = $_GET['name'];
	if($lv->domain_is_active($name)){
		echo "<meta http-equiv='refresh' content='5; url=/VMs?name=$name&amp;refresh=true'>";
		$msg = "Waiting for $name to shutdown...";
	}else{
		echo "<script>clearHistory();</script>";
		$msg = "$name has been shutdown";
	}
}
if ($action) {
	if ($action == 'domain-edit') {
		include('/usr/local/emhttp/plugins/dynamix.kvm.manager/editxml.php');
	}
}else{
   if ($subaction) {
     	$domName = $lv->domain_get_name_by_uuid($uuid);
      if ($subaction == 'domain-start') {
        	$msg = $lv->domain_start($domName) ? "$domName has been started" :
        		"error";
			 }
		elseif ($subaction == 'domain-autostart') {
	 		if ($lv->domain_get_autostart($domName)) {
	 			$msg = $lv->domain_set_autostart($domName, false) ? "$domName has been removed from autostart" :
	 				"Error: ".$lv->get_last_error();
	 		} else {
	 			$msg = $lv->domain_set_autostart($domName, true) ? "$domName has been set to autostart" :
       			"Error: ".$lv->get_last_error();
			}
		}
      elseif ($subaction == 'domain-pause') {
        	$msg = $lv->domain_suspend($domName) ?
  	      	"$domName has been paused" :
   	     	"Error: ".$lv->get_last_error();
		}
      elseif ($subaction == 'domain-resume') {
      	$msg = $lv->domain_resume($domName) ?
      		"$domName has been resumed" :
      		"Error: ".$lv->get_last_error();
		}
      elseif ($subaction == 'domain-restart') {
        	$msg = $lv->domain_reboot($domName) ?
        		"$domName has been restarted" :
        		"Error: ".$lv->get_last_error();
		}
      elseif ($subaction == 'domain-save') {
        	$msg = $lv->domain_save($domName) ?
        		"$domName has been shutdown and saved" :
        		'Error: '.$lv->get_last_error();
		}
		elseif ($subaction == 'domain-stop') {
         $msg = $lv->domain_shutdown($domName) ?
         	"Waiting for $domName to shutdown..." :
         	"Error: ".$lv->get_last_error();
			echo "<meta http-equiv='refresh' content='5; url=/VMs?name=$domName&amp;refresh=true'>";
         	}
      elseif ($subaction == 'domain-destroy') {
         $msg = $lv->domain_destroy($domName) ?
         	"$domName has been destroyed" :
         	"Error: ".$lv->get_last_error();
      }
      elseif ($subaction == 'domain-delete') {
         $msg = $lv->domain_delete($domName) ? "$domName has been deleted" :
         	"Error: ".$lv->get_last_error();
      }
      elseif ($subaction == 'domain-undefine') {
         $msg = $lv->domain_undefine($domName) ? "$domName has been undefined" :
         	"Error: ".$lv->get_last_error();
      }
      elseif ($subaction == 'domain-define') {
         if (@$_POST['xmldesc']) {
      	   $msg = $lv->domain_define( $_POST['xmldesc']) ? "Domain definition has been added" :
   	      	'Error: '.$lv->get_last_error();
         }
      }
      //edit domain XML
      elseif ($subaction == 'domain-create') {
         if (@$_POST['xmldesc']) {
         	$xml = $_POST['xmldesc'];
           	$msg = $lv->domain_define($xml) ? "$domName definition has been changed" :
         	  	"Error: ".$lv->get_last_error();
         }
		}
		elseif ($subaction == 'domain-diskdev') {
			$msg = $lv->domain_set_disk_dev($domName, $_GET['olddev'], $_POST['diskdev']) ?
				$domName.' disk dev has been changed from '.$_GET['olddev'].' to '.$_POST['diskdev']:
				'Error: '.$lv->get_last_error();
		}
		elseif ($subaction == 'domain-diskresize') {
			$capacity = $_POST['cap'];
			if (substr($_GET['oldcap'],0,-1) < substr($capacity,0,-1)){
				shell_exec("qemu-img resize -q {$_GET['disk']} $capacity");
				$msg = $domName." disk capacity has been changed to $capacity";
			}else {
				$msg = "Error: disk capacity has to be greater than {$_GET['oldcap']}";
			}
		}
		elseif ($subaction == 'cdrom-change') {
         $msg = $lv->domain_change_cdrom($domName, $_POST['cdrom'], $_GET['dev'], $_GET['bus']) ?
         	"$domName cdrom has been changed" :
         	"Error: ".$lv->get_last_error();
      }
		elseif ($subaction == 'memory-change') {
			$msg = $lv->domain_set_memory($domName, $_GET['memory']*1024) ?
				"$domName memory has been changed to ".$_GET['memory']." MiB" :
				"Error: ".$lv->get_last_error();
		}
		elseif ($subaction == 'vcpu-change') {
			$vcpu = $_GET['vcpu'];
			$msg = $lv->domain_set_vcpu($domName, $vcpu) ?
				"$domName vcpu number has been changed to $vcpu" :
				"Error: ".$lv->get_last_error();
		}
		elseif ($subaction == 'bootdev-change') {
			$bootdev = $_GET['bootdev'];
			$msg = $lv->domain_set_boot_device($domName, $bootdev) ?
				"$domName boot device has been changed to $bootdev" :
				"Error: ".$lv->get_last_error();
		}
		elseif ($subaction == 'disk-remove') {
			$msg = $lv->domain_disk_remove($domName, $_GET['dev']) ?
				"$domName disk has been removed" :
				'Error: '.$lv->get_last_error();
		}
		elseif ($subaction == 'snap-create') {
			$msg = $lv->domain_snapshot_create($domName) ?
				"Snapshot for $domName has been created" :
				'Error: '.$lv->get_last_error();
		}
		elseif ($subaction == 'snap-delete') {
			$msg = $lv->domain_snapshot_delete($domName, $_GET['snap']) ?
				"Snapshot for $domName has been deleted" :
				'Error: '.$lv->get_last_error();
		}
		elseif ($subaction == 'snap-revert') {
			$msg = $lv->domain_snapshot_revert($domName, $_GET['snap']) ?
				"$domName has been reverted" :
				'Error: '.$lv->get_last_error();
		}
		elseif ($subaction == 'snap-desc') {
			$msg = $lv->snapshot_set_metadata($domName, $_GET['snap'], $_POST['snapdesc']) ?
				"Snapshot description for $domName has been saved":
				'Error: '.$lv->get_last_error();
		}
	echo "<script>clearHistory();</script>";
	}
	echo "<table class='tablesorter kvm' id='kvm_table'>
  	      			<tr>
  	      				<thead>
  	      				<th class='header'><i class='glyphicon glyphicon-th-list'></i></th>
  		          		<th class='header'><a href='#' onClick='window.location.reload()'>Name</a></th>
   	         	   <th class='header'>vCPU</th>
							<th class='header'>RAM (MiB)</th>
         	     		<th class='header'>Hard Drive(s)</th>
              		 	<th class='header'>ID/VNC Port</th>
              			<th class='header'>Auto</th>
              			<th class='header'>Action</th><th class='header'></th><th class='header'></th>
              			</thead>
              			<tbody>
            		</tr>";
   //Get domain variables for each domain
   if ($libvirt_running == "yes")
		$doms = $lv->get_domains();
	if(!is_array($doms)){
		if ($libvirt_running == "yes")
			$msg = "No domains defined. Create from template or add XML.";
		else
			$msg = "Libvirt is not running. Goto Settings tab then click Start.";
	} else {
	sort($doms);
   for ($i = 0; $i < sizeof($doms); $i++) {
   	$name = $doms[$i];
      $res = $lv->get_domain_by_name($name);
      $uuid = libvirt_domain_get_uuid_string($res);
      $dom = $lv->domain_get_info($res);
      $id = $lv->domain_get_id($res);
      $state = $lv->domain_state_translate($dom['state']);
   	if ($state == 'running') {
		   $mem = number_format($dom['memory'] / 1024, 0, '.', ' ');
		 	$color = 'green';
		}else{
			$mem = $lv->domain_get_memory($res)/1024;
			if($state == 'paused')
			 	$color = 'yellow';
			else
      	  	$color = 'red';
      }
   	$vcpu = $dom['nrVirtCpu'];
		$auto = $lv->domain_get_autostart($name) ? 'checked="checked"':"";
      if (($diskcnt = $lv->get_disk_count($res)) > 0) {
        	$disks = $diskcnt.' / '.$lv->get_disk_capacity($res);
         $diskdesc = 'Current physical size: '.$lv->get_disk_capacity($res, true);
      }else{
        	$disks = '-';
         $diskdesc = '';
      }
      $vncport = $lv->domain_get_vnc_port($res);
      $wsport = $lv->domain_get_ws_port($res);
		if ($vncport < 0){
        	$vnc = '-';
        	$wsport = '-';
        	$vncport = "auto";
      }else
         $vnc = '/plugins/dynamix.kvm.manager/vnc.html?autoconnect=true&host='.$var['IPADDR'].'&port='.$wsport;
		$bootdev = $lv->domain_get_boot_devices($name)[0];

      unset($tmp);
      if (!$id)
        	$id = '-';
      unset($dom);
		//Domain information
      echo "<tr style='background-color:".bcolor($i,$theme)."'>
      			<td>
						<img src='/plugins/dynamix.kvm.manager/images/".$color."-on.png' title='$state'>
      			</td>
        	      <td>
						<a href='#' onclick=\"toggle_id('name$i')\" title='click for more domain info'>$name</a>
               </td>
               <td>";
     		/* display and change vcpus */
	     	if ($state == 'shutoff'){
				echo	'<select name="vcpu_count" onchange="location = this.options[this.selectedIndex].value;" title="define number of vpus for domain">';
	  			for ($ii = 1; $ii <= $maxcpu; $ii++) {
        			echo "<option value='?subaction=vcpu-change&amp;vcpu=$ii&amp;uuid=$uuid'";
        			if ($ii == $vcpu)
     	   			echo ' selected="selected"';
          		echo ">$ii</option>";
           	}
				echo "</select>";
			}
			else
				echo $vcpu;
         echo "</td>
               <td>";
			/* display memory*/
     		if ($state == 'shutoff') {
     			echo '<select name="memory" onchange="location = this.options[this.selectedIndex].value;" title="define the amount memory">';
				echo "<option value=''>*****</option>";
        		for ($ii = 1; $ii <= ($maxmem*2); $ii++) {
        			$mem2 = ($ii*512);
         		echo "<option value='?subaction=memory-change&amp;uuid=$uuid&amp;memory=$mem2'";
					if ((int)$mem == $mem2)
						echo " selected";
         		echo ">$mem2</option>";
				}
				echo "</select>";
			} else
     			echo $mem;
         echo "</td>
               <td title='$diskdesc'>$disks</td>
               <td>$id / $vncport</td>
               <td><input class='checkbox' type='checkbox' name='auto_$name' title='Toggle VM auostart' $auto onClick=\"javascript:location.href='?subaction=domain-autostart&amp;uuid=$uuid'\" ></td>
               <td>";
		//Domain Action Buttons
      if ($state == 'running'){
			echo "<button class='btn btn-sm btn-primary' onClick=\"window.open('$vnc','_blank','scrollbars=yes,resizable=yes'); return false;\"
      	  			title='open VNC connection'><i class='glyphicon glyphicon-eye-open'></i></button> |
           		<button class='btn btn-sm btn-warning' onClick=\"javascript:location.href='?subaction=domain-pause&amp;uuid=$uuid'\"
        				title='Pause domain'><i class='glyphicon glyphicon-pause'></i></button> |
            	<button class='btn btn-sm btn-primary' onClick=\"javascript:location.href='?subaction=domain-restart&amp;uuid=$uuid'\"
        				title='restart domain'><i class='glyphicon glyphicon-refresh'></i></button> |
        			<button class='btn btn-sm btn-warning' onClick=\"javascript:location.href='?subaction=domain-save&amp;uuid=$uuid'\"
        				title='Suspend to disk, save domain state'><i class='glyphicon glyphicon-save'></i></button> |
        			<button class='btn btn-sm btn-danger' onClick=\"javascript:location.href='?subaction=domain-stop&amp;uuid=$uuid'\"
        				title='safely shutdown domain'><i class='glyphicon glyphicon-stop'></i></button> |
              	<a class='btn btn-sm btn-default' href=\"?subaction=domain-destroy&amp;uuid=$uuid\"
              		onClick=\"return confirm('Are your sure you want to force shutdown $name?')\" title='force domain to shutdown'><i class=\"glyphicon glyphicon-eject\"></i></a>";
 		}else {
        	if ($state == 'paused' | $state == 'unknown')
        		echo "<button class='btn btn-sm btn-success' onClick=\"javascript:location.href='?subaction=domain-resume&amp;uuid=$uuid'\"
        				title='resume domain'><i class='glyphicon glyphicon-play'></i></button> |
        			<button class='btn btn-sm btn-warning' onClick=\"javascript:location.href='?subaction=domain-save&amp;uuid=$uuid'\"
        				title='Suspend to disk, save domain state'><i class='glyphicon glyphicon-save'></i></button>";
			else
        		echo "<button class='btn btn-sm btn-success' onClick=\"javascript:location.href='?subaction=domain-start&amp;uuid=$uuid'\"
        				title='start domain'><i class='glyphicon glyphicon-play'></i></button>";
		}
      if ($state == 'shutoff')
      	echo " | <a class='btn btn-sm btn-warning' href='?subaction=domain-undefine&amp;uuid=$uuid'
          		 onClick=\"return confirm('Remove $name definition?')\" title='remove $name definition'><i class='glyphicon glyphicon-minus'></i></a>
					 | <a class='btn btn-sm btn-danger' href='?subaction=domain-delete&amp;uuid=$uuid'
          		 onClick=\"return confirm('Completely remove $name xml and image?')\" title='remove $name xml and image'><i class=' glyphicon glyphicon-remove'></i></a>
          		  | <button class='btn btn-sm btn-info' onClick=\"javascript:location.href='?action=domain-edit&amp;uuid=$uuid'\"
		  		title='edit domain XML'><i class='glyphicon glyphicon-pencil'></i></button>";
		else
			echo " | <button class='btn btn-sm btn-info' onClick=\"javascript:location.href='?action=domain-edit&amp;uuid=$uuid&amp;readonly=true'\"
		  		title='view domain XML'><i class=\"glyphicon glyphicon-share-alt\"></i></button>";
			echo "</td>
			</tr>
			<tr id='name$i' style='display: none'>";
		/* Disk device information */
         echo "<td colspan='8'><table class='tablesorter domdisk' id='domdisk_table'>
         			<tr>
         				<thead>
                  	<th class='header'><i class='glyphicon glyphicon-hdd '></i><b> Disk devices &nbsp;</b>
                  	<select name='boot_dev' onchange='location = this.options[this.selectedIndex].value;' title='change boot device'>
                  	<option ";
               //boot device select
							if($bootdev == 'hd')
								echo "selected ";
              	echo "value='?subaction=bootdev-change&amp;uuid=$uuid&amp;bootdev=hd'>hd</option>
              			<option ";
							if($bootdev == 'cdrom')
								echo "selected ";
               echo "value='?subaction=bootdev-change&amp;uuid=$uuid&amp;bootdev=cdrom'>cd</option>
                  	</select><font size='-6'>(boot)</font>
                  	</th>
                     <th class='header'>Driver type</th>
                     <th class='header'>Dev Name</th>
                     <th class='header'>Capacity</th>
                		<th class='header'>Allocation</th>
                 		<th class='header'>Actions</th><th class='header'></th>
                 		</thead>
                 	</tr>";
		/* Display domain disks */
			$tmp = $lv->get_disk_stats($name);
         if (!empty($tmp)) {
				for ($ii = 0; $ii < sizeof($tmp); $ii++) {
            	$capacity = $lv->format_size($tmp[$ii]['capacity'], 0);
               $allocation = $lv->format_size($tmp[$ii]['allocation'], 2);
               $disk = (array_key_exists('file', $tmp[$ii])) ? $tmp[$ii]['file'] : $tmp[$ii]['partition'];
					$type = $tmp[$ii]['type'];
					$dev = $tmp[$ii]['device'];
					echo "<tr style='background-color:".bcolor($ii,$theme)."'>
						   <td>".basename($disk)."</td>
							<td>$type</td>
           				<td title='Click to change Dev Name'><form method='post' action='?subaction=domain-diskdev&amp;uuid=$uuid&amp;olddev=$dev' /><span class='diskdev' style='width:30px'>
								<span class='text' ><a href='#'> $dev </a></span>
  									<input class='input' type='text' style='width:36px' name='diskdev' value='$dev' val='diskdev' hidden />
								</span></form>
							</td>
                     <td title='Click to increase Disk Size'>
                     	<form method='post' action='?subaction=domain-diskresize&amp;uuid=$uuid&amp;disk=$disk&amp;oldcap=$capacity' /><span class='diskresize' style='width:30px'>
								<span class='text' ><a href='#'> $capacity </a></span>
  									<input class='input' type='text' style='width:46px' name='cap' value='$capacity' val='diskresize' hidden />
								</span></form>
							</td>
                     <td>$allocation</td>
                     <td>N/A</td>
						</tr>";
				}
         }
		/*end display disk display*/

		/* Display domain cdroms */
         $tmp = $lv->get_cdrom_stats($name);
         if (!empty($tmp)) {
				for ($ii = 0; $ii < sizeof($tmp); $ii++) {
            	$capacity = $lv->format_size($tmp[$ii]['capacity'], 2);
               $allocation = $lv->format_size($tmp[$ii]['allocation'], 2);
               $disk = (array_key_exists('file', $tmp[$ii])) ? $tmp[$ii]['file'] : $tmp[$ii]['partition'];
					$type = $tmp[$ii]['type'];
					$dev = $tmp[$ii]['device'];
					$bus = $tmp[$ii]['bus'];
					echo "<tr style='background-color:".bcolor($ii,$theme)."'>
							<td>
						<form method='post' id='cdrom_form$i$ii' name='cdromform' action='?subaction=cdrom-change&amp;uuid=$uuid&amp;dev=$dev&amp;bus=$bus' />
							<span>
								<span class='text'><a href='#'>".basename($disk)."</a></span>
								<input class='input cdrom_file' id='cdrom_file$i$ii'
								onclick='CDRomTree(cdrom_tree$i$ii, cdrom_file$i$ii, cdrom_form$i$ii);' hidden type='text' name='cdrom' value='$disk' title=change cdrom image'>
								<div class='cdrom_tree' id='cdrom_tree$i$ii' hidden></div>
							</span>
						</form>
              			</td>
                     <td>$type</td>
           				<td title='Click to change Dev Name'><form method='post' action='?subaction=domain-diskdev&amp;uuid=$uuid&amp;dev=$dev' /><span class='diskdev' style='width:30px'>
								<span class='text' ><a href='#'> $dev </a></span>
  									<input class='input' type='text' style='width:36px' name='diskdev' value='$dev' val='diskdev' hidden />
								</span></form>
							</td>
                     <td>$capacity</td>
                     <td>$allocation</td>
                     <td>";
						/* add remove button if shutoff */
                     if ($state == 'shutoff')
                 	      echo "remove <a href='?subaction=disk-remove&amp;uuid=$uuid&amp;dev=$dev'
                  	      onclick=\"return confirm('Disk is not deleted. Remove from domain?')\" title='remove disk from domain'>
                  	      <i class='glyphicon glyphicon-remove red'></i></a>";
                 	   else
                 	   	echo "N/A";
					echo '</td>
					</tr>';
				}
         }
			/*end display cdrom display*/
         echo "</table>";
			unset($capacity, $dev, $disk, $type, $vcpu);
			/* Backup  information */
         /*	echo "<table class='tablesorter domsnap' id='backup_table'>
		        	      <tr>
		        	      <thead>
      	      	   	<th class='header'><i class='glyphicon glyphicon-floppy-disk '></i><b> Backups &nbsp;&nbsp;&nbsp;</b>";
      	          if ($state == 'shutoff')
      	          	echo "<a href='?subaction=backup-create&amp;uuid=$uuid' title='create a backup of current domain'><i class='glyphicon glyphicon-plus green'></i></a>";
      	          echo	"</th>
         	       		<th class='header'>Name</th>
         	       		<th class='header'>Date</th>
         	       		<th class='header'>Time</th>
         	       		<th class='header'>Description</th>
                  		<th class='header'>Actions ";
  	         if ($state == 'running')
  	         	echo " <small>(stop to enable)</small>";
                  echo "</th><th class='header'></th><th class='header'></th>
                  		</thead>
	                  </tr>";
         if (false) {
         	sort($tmp);
				for ($ii = 0; $ii < sizeof($tmp); $ii++) {
					$backup = $tmp[$ii];
					$date = date("D d M  Y",$name);
					$time = date("H:i:s",$backup);
					$info = $lv->domain_backup_get_info($name, $backup);
					if(empty($info)){
						$info = "Click to change description";
						$val = "";}
					else
						$val = $info;
            	echo "<tr style='background-color:".bcolor($ii,$theme)."'>
            		   	<td>".($ii+1)."</td>
                  	   <td>$backup</td>
                  	   <td>$date</td>
                  	   <td>$time</td>
                  	   <td><form method='post' action='?subaction=backup-desc&amp;uuid=$uuid&amp;backup=$backup' /><span class='backdesc'>
    									<span class='text'><a href='#'> $info </a></span>
    									<input class='input' type='text' name='backdesc' value='$val' val='backdesc' hidden placeholder='Click to change description' title='Click to change description'/>
									 </span></form>
								</td>
   	                  <td>
   	                  	revert &nbsp;<a href='?subaction=backup-revert&amp;uuid=$uuid&amp;backup=$backup'><i class='glyphicon glyphicon-refresh lightblue'></i></a>
            	         </td>
   	                  <td>
									delete&nbsp;<a href='?subaction=backup-delete&amp;uuid=$uuid&amp;backup=$backup'><i class='glyphicon glyphicon-remove red'></i></a>
            	          </td>
               	   </tr>";
				}
         }
         else
         	echo "<tr><td>no backups</td>
   	                <td>none</td>
   	                <td>N/A</td>
   	                <td>N/A</td>
   	                <td>N/A</td>
   	                <td>N/A</td>
   	            </tr>";
     	echo '</table>';*/

/* End Backup information*/

			/* Snapshot  information */
         	echo "<table class='tablesorter domsnap' id='domsnap_table'>
		        	      <tr>
		        	      <thead>
      	      	   	<th class='header'><i class='glyphicon glyphicon-camera '></i><b> Snapshots </b>";
  	         if ($state == 'shutoff')
						echo "<a href='?subaction=snap-create&amp;uuid=$uuid' title='create a snapshot of current domain state'><i class='glyphicon glyphicon-plus green'></i></a>";
						echo "</th>
         	       		<th class='header'>Name</th>
         	       		<th class='header'>Date</th>
         	       		<th class='header'>Time</th>
         	       		<th class='header'>Description</th>
                  		<th class='header'>Actions ";
  	         if ($state == 'running')
  	         	echo " <small>(stop to enable)</small>";
                  echo "</th><th class='header'></th><th class='header'></th>
                  		</thead>
	                  </tr>";
         $tmp = $lv->domain_snapshots_list($res);
         if (!empty($tmp)) {
         	sort($tmp);
				for ($ii = 0; $ii < sizeof($tmp); $ii++) {
					$snap = $tmp[$ii];
					$date = date("D d M  Y",$snap);
					$time = date("H:i:s",$snap);
					$info = $lv->domain_snapshot_get_info($name, $snap);
					if(empty($info)){
						$info = "Click to change description";
						$val = "";}
					else
						$val = $info;
            	echo "<tr style='background-color:".bcolor($ii,$theme)."'>
            		   	<td>".($ii+1)."</td>
                  	   <td>$snap</td>
                  	   <td>$date</td>
                  	   <td>$time</td>
                  	   <td><form method='post' action='?subaction=snap-desc&amp;uuid=$uuid&amp;snap=$snap' /><span class='snapdesc'>
    									<span class='text'><a href='#'> $info </a></span>
    									<input class='input' type='text' name='snapdesc' value='$val' val='snapdesc' hidden placeholder='Click to change description' title='Click to change description'/>
									 </span></form>
								</td>
   	                  <td>
   	                  	revert &nbsp;<a href='?subaction=snap-revert&amp;uuid=$uuid&amp;snap=$snap'><i class='glyphicon glyphicon-refresh lightblue'></i></a>
            	         </td>
   	                  <td>
									delete&nbsp;<a href='?subaction=snap-delete&amp;uuid=$uuid&amp;snap=$snap'><i class='glyphicon glyphicon-remove red'></i></a>
            	          </td>
               	   </tr>";
				}
         }
         else
         	echo "<tr><td>no snapshots</td>
   	                <td>none</td>
   	                <td>N/A</td>
   	                <td>N/A</td>
   	                <td>N/A</td>
   	                <td>N/A</td>
   	            </tr>";
     	echo '</table></td>
			</tr>';
		}
	}
	echo '</tbody></table>';
}
/* End Snapshot information */
unset($name, $val);
if($msg){
	if(strpos($msg, "rror:"))
		$color = 'red';
	else
		$color = 'green';
	echo "<script type='text/javascript'>$(function() { $('#countdown').html('<font class=\"".$color."\">".$msg."</font>');}); </script>";
	}
?>