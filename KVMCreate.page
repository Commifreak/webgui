Menu="KVM:1"
Title="Create VM"
---
<?php
if (array_key_exists('sent', $_POST)) {

	$tmp = $lv->domain_new($_POST['domain'], $_POST['media'], $_POST['nic'], $_POST['disk'], $_POST['usb'], $_POST['usbtab'],$_POST['shares']);
	if (!$tmp){
		echo "<script type='text/javascript'>$(function() { $('#countdown').html('<font class=\"red\">Error: ".$lv->get_last_error()."</font>');}); </script>";
	} else {
  		$name = $_POST['domain']['name'];
		$res = $lv->get_domain_by_name($name);
		$uuid = libvirt_domain_get_uuid_string($res);
		echo "<script type='text/javascript'>$(function() { $('#countdown').html('<font class=\"green\">Domain $name&nbsp; has been created</font>');}); </script>";
		echo '<meta http-equiv="refresh" content="1; url=/KVM">';
	}
}

  $ci  = $lv->get_connect_information();
  unset($ci);
  $info = $lv->host_get_node_info();
  $info = $lv->host_get_node_info();
  $maxcpu = (int)$info['cores']*(int)$info['threads'];
  $maxmem = number_format(($info['memory'] / 1048576), 0, '.', ' ');
?>

<div id="content">

<form method="POST">

<table class="tablesorter" id="form-table" style="margin-top:-21px;margin-left:0px"><thead><th colspan="2">Create New Virtual Machine From Template</th></thead>
</table>
<table style="margin-top:-5px;margin-left:0px">

<tr>
	<td align="right">Operating System:&nbsp;</td>
	<td>
		<select onchange="toggleRows('os', this.value)" name="domain[os]" autofocus title="Select domain operating system type. Windows or Other for Linux, OSX and others">
			<option value="1">Windows</option>
			<option value="0">Other</option>
		</select>
		<label style="margin-top:0px;margin-left:54px">Architecture:&nbsp;</label>
		<select name="domain[arch]" title="Select domain Architecture 32bit or 64bit">
			<option value="1">64bit</option>
			<option value="0">32bit</option>
		</select>
	</td>
</tr>

<tr>
    <td align="right">vCPUs:&nbsp; </td>
    <td>
		<select name="domain[vcpus]" title="define number of vpus for domain">
		<?php
	        for ($i = 1; $i <= $maxcpu; $i++)
   	         echo '<option value='.$i.'>'.$i.'</option>';
		?>
		</select>
		<label style="margin-top:0px;margin-left:110px">Machine:&nbsp;</label>
		<select name="domain[machine]" title="Select the machine model.  pc-i440fx will work for most.  Q35 for a newer machine model with PCIE">
			<option value="pc-i440fx-2.1">pc</option>
			<option value="q35">q35</option>
		</select>
	</td> 
</tr>

<tr>
    <td align="right"> Memory (MiB):&nbsp; </td>
    <td>
		<select name="domain[mem]" title="define the amount memory">
		<?php
   	     for ($i = 1; $i <= ($maxmem*2); $i++) {
      	  		$mem = ($i*512);
         	   echo '<option value="'.$mem.'">'.$mem.'</option>';
				}
		?>
		</select>
		<label style="margin-top:0px;margin-left:45px">Max. Mem (MiB):&nbsp;</label>
		<select name="domain[maxmem]" title="define the maximun amount of memory">
		<?php
   	     for ($i = 1; $i <= ($maxmem*2); $i++) {
      	  		$mem = ($i*512);
         	   echo '<option value="'.$mem.'">'.$mem.'</option>';
				}
		?>
		</select>
	</td> 
</tr>

<tr>
    <td align="right">Persistence:&nbsp;</td>
    <td>
        <select name="domain[persistent]" title="Select domain to be permanent or temporary">
			<option value="1">Permanent</option>
			<option value="0">Temporary</option>
        </select>
      <label style="margin-top:0px;margin-left:45px">Clock offset:&nbsp;</label>
		<select name="domain[clock]" title="how the guest clock is synchronized to the host">
			<option value="localtime">localtime</option>
			<option value="utc">UTC</option>
		</select>

    </td>
</tr>

<tr id="setup2_os" style="display: table-row">
    <td align="right">HyperV:&nbsp;
</td>
    <td>
		<table style="margin-top:0px;margin-left:0px">
			<tr>
			<td>
		 		<select name="domain[hyperv]" title="Hyperv tweaks for Windows.  Don't select if trying to passthrough Nvidia card">
					<option value="0">No</option>
					<option value="1">Yes</option>
				</select>
			</td>
			</tr>
		</table>
    </td>
</tr>

<tr>
    <td align="right">Name:&nbsp; </td>
    <td><input type="text" id="name" name="domain[name]" title="name of vitual machine" placeholder="name of vitual machine" /></td>
</tr>

<tr>
    <td align="right">Description:&nbsp; </td>
    <td><input type="text" name="desc" title="description of vitual machine" placeholder="description of vitual machine (optional)" /></td>
</tr>

<tr>
    <td align="right">Install image (iso):&nbsp; </td>
    <td>
		<input type="text" id="media_file" name="media[cdrom]" placeholder="Click and Select cdrom image to install operating system">
	</td>
</tr>

<tr>
	<td></td>
	<td>
		<div style="margin-top:0px;margin-left:-75px" id="media_tree" hidden></div>
	</td>
</tr>

<tr id="setup_os" style="display: table-row">
    <td align="right"><a href="http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/" target="_blank">Virtio drivers (iso):&nbsp; </a>
    <br /></<font size="-6">(latest drivers)&nbsp;&nbsp;</font>
</td>
    <td>
		<table style="margin-top:0px;margin-left:0px">
			<tr>
			    <td>
					<input type="text" id="drivers_file" name="media[drivers]" placeholder="Download, Click and Select location of virtio drivers image">
				</td>
			</tr>
		</table>
    </td>
</tr>

<tr>
	<td></td>
	<td>
		<div style="margin-top:0px;margin-left:-75px" id="drivers_tree" hidden></div>
	</td>
</tr>

<tr>
    <td align="right"><b>Disk Settings:&nbsp;</b></td>
    <td>
      <select name="disk[settings]" onchange="toggleRows('disk', this.value)">
	<option value="1">Create New Disk</option>
	<option value="0">Use Existing Disk</option>
      </select>
    </td>
</tr>

<tr id="setup_disk" style="display: table-row">
	<td></td>
   <td>
   <table style="margin-top:0px;margin-left:-75px" >
     
	<tr>
		<td>
			<label style="margin-top:0px;margin-left:-28px">Directory location:&nbsp;</label>
			<input type="text" id="new_file" name="disk[new]" placeholder="Separate sub-folder and image will be created based on Name">
			<div style="margin-top:10px;margin-left:0px" id="new_tree" hidden></div>
		</td>
	</tr>

	<tr>
		<td>
			<label style="margin-top:0px;margin-left:44px">Size:&nbsp;</label>
			<input type="text" name="disk[size]" placeholder="e.g. 10M, 1G, 10G...">
		</td>
	</tr>

	<tr>
		<td>
			<label style="margin-top:0px;margin-left:19px">Disk type:&nbsp;</label>
		   <select name="disk[driver]" title="type of storage image">
				<option value="qcow2">qcow2</option>
				<option value="raw">raw</option>
				<option value="qcow">qcow</option>
		   </select>
		</td>
	</tr>	
	</table>
   </td>
</tr>

<tr id="setup3_disk" style="display: none">
    <td>&nbsp;</td>
    <td>
        <table style="margin-top:0px;margin-left:-76px" >

	<tr>
		<td>
			<label>Existing Disk:&nbsp;</label>
			<input type="text" id="disk_file" name="disk[image]" placeholder="Select existing image to use for virtual machine">
			<div style="margin-top:10px;margin-left:0px" id="disk_tree" hidden></div>			
		</td>
	</tr>
	</table>
    </td>
</tr>

<tr>
	<td>&nbsp;</td>
	<td>
   <table style="margin-top:-10px;margin-left:0px" >
	<tr>
		<td>
			<label style="margin-top:0px;margin-left:-87px">Disk dev name:&nbsp;</label>
			<input type="text" value="hda" name="disk[dev]" placeholder="name of disk inside vm" title="name of disk inside vm" />
		</td>
	</tr>
	</table>
    </td>
</tr>

<tr>
    <td align="right"><b>Network Settings:&nbsp;</b></td>
    <td>
      <select onchange="toggleRows('network', this.value)">
	<option value="0">Auto</option>
	<option value="1">Manual</option>
      </select>
    </td>
</tr>	

<tr id="setup_network" style="display: none">
    <td>&nbsp;</td>
    <td>
        <table style="margin-top:0px;margin-left:-95px">
			<tr>
		   	<td align="right">MAC:&nbsp;</td>
   			<td>
					<input type="text" name="nic[mac]" title="random mac, you can supply your own" value="<?php echo $lv->generate_random_mac_addr() ?>" id="nic_mac_addr" />
				</td>
			</tr>

			<tr>
   			<td align="right" >Bridge:&nbsp;</td>
			   <td>
					<input type="text" value="<?=$var['BRNAME'];?>" name="nic[net]" placeholder="name of bridge in unRAID" title="name of bridge in unRAID automatically filled in" />			
			   </td>
			</tr>
        </table>
    </td>
</tr>

<tr>
    <td align="right"><b>USB Devices:&nbsp;</b></td>
    <td>
      <select onchange="toggleRows('usb', this.value)">
	<option value="0">No</option>
	<option value="1">Yes</option>
      </select>
    </td>
</tr>

<tr id="setup_usb" style="display: none">
    <td>&nbsp;</td>
    <td>
        <table style="margin-top:0px;margin-left:-50px;width:auto; max-width:382px; word-wrap: break-word;" >
<tr>
	<td align="left">

<?php

function usb_checkbox($usb, $key)
{
	$deviceid = strstr($usb, 'ID');
	$deviceid = substr($usb,3,9);
	echo '<input class="checkbox" type="checkbox" value="'.$deviceid.'" name="usb['.$key.']" />';
	echo "<label>$usb</label><br />";
}
$usb = trim(shell_exec('lsusb'));
$usb = explode("\n", $usb);
array_walk($usb, 'usb_checkbox');
?>
	<input class="checkbox" id="usbtab" type="checkbox" value="1" name="usbtab" title="mouse coordinates in vm match the pointer position on the real desktop" checked="checked"/> VNC Mouse/USB Tablet (uncheck for OS without desktop)
   </td>
</tr>
	</table>
    </td>
</tr>

<tr id="setup3_os" hidden>
    <td align="right"><b>unRAID Shares:&nbsp;</b></td>
    <td>
      <select onchange="toggleRows('shares', this.value)">
	<option value="0">No</option>
	<option value="1">Yes</option>
      </select>
    </td>
</tr>
	
<tr id="setup_shares" style="display: none">
    <td>&nbsp;</td>
    <td>
        <table style="margin-top:0px;margin-left:-129px">
<tr>
	<td align="right">Share:&nbsp;</td>
	<td>
		<input type="text" value="" name="shares[source]" placeholder="e.g. /mnt...(won't work with windows)" title="path of unRAID share" />
	</td>
</tr>

<tr>
	<td align="right">Mount tag:&nbsp;</td>
	<td>
		<input type="text" value="" name="shares[target]" placeholder="e.g. shares (name of mount tag inside vm)" title="mount tag inside vm" />
	</td>
</tr>
        </table>
    </td>
</tr>

<tr align="left">
	<td align="right">
	</td>
    <td>
 	   <input type="submit" value="Create VM" />
 	   <input type="button" value="Reset Form" onClick="this.form.reset();location.reload()" />
    </td>
</tr>

	</table>
		<input type="hidden" name="sent" value="1" />
	</form>

</div>

<script type="text/javascript">
function toggleRows(what, val) {
	if (val == 1){
		style = 'table-row';
		style2 = 'table-row';		
		style3 = 'none';}		
	else {
		style = 'none';
		style2 = 'none';
		style3 = 'table-row';}
	name = 'setup_'+what;
	d = document.getElementById(name);
	if (d != null)
		d.style.display = style;
	name = 'setup2_'+what;
	d = document.getElementById(name);
	if (d != null)
		d.style.display = style2;
	name = 'setup3_'+what;
	d = document.getElementById(name);
	if (d != null)
		d.style.display = style3;		
}

function hideRows(what, val) {
	if (val == 1)
		style = 'table-row';
	else 
		style = 'none';
	name = 'setup_'+what;
	d = document.getElementById(name);
	if (d != null)
		d.style.display = style;
	name = 'setup2_'+what;
	d = document.getElementById(name);
	if (d != null)
		d.style.display = style;
	name = 'setup3_'+what;
	d = document.getElementById(name);
	if (d != null)
		d.style.display = style;
}

function showMedia(){
    $('#media_file').on('click');
    $('#media_tree').show();
    $('#media_tree').focus();
}

function showDrivers(){
    $('#drivers_file').on('click');
    $('#drivers_tree').show();
    $('#drivers_tree').focus();
}

function showDisk(){
    $('#disk_file').on('click');
    $('#disk_tree').show();
    $('#disk_tree').focus();
}

function showNew(){
    $('#new_file').on('click');
    $('#new_tree').show();
    $('#new_tree').focus();
}

function hideNew(){
    $('#new_tree').on('dblclick');
    $('#new_tree').hide();
}

$(function(){
	$('#media_tree').fileTree(
		{root: "<?php echo $domain_cfg['MEDIADIR'];?>",filter:['iso','ISO'],script:'/plugins/dynamix.kvm.manager/classes/FileTree.php',multiFolder:false},
		function(file) {$('#media_file').val(file);$('#media_tree').hide();},
		function(directory) {$('#media_dir').val(directory);});
	$('#drivers_tree').fileTree(
		{root: "<?php echo $domain_cfg['MEDIADIR'];?>",filter:['iso','ISO'],script:'/plugins/dynamix.kvm.manager/classes/FileTree.php',multiFolder:false},
		function(file) {$('#drivers_file').val(file);$('#drivers_tree').hide();},
		function(directory) {$('#drivers_dir').val(directory);});
	$('#disk_tree').fileTree(
		{root:"<?php echo $domain_cfg['DISKDIR'];?>",filter:['qcow2','qcow','img'],script:'/plugins/dynamix.kvm.manager/classes/FileTree.php',multiFolder:false},
		function(file) {$('#disk_file').val(file);$('#disk_tree').hide();},
		function(directory) {$('#disk_file').val(directory);});
	$('#new_tree').fileTree(
		{root:'/mnt/',filter:['.'],script:'/plugins/dynamix.kvm.manager/classes/FileTree.php',multiFolder:false},
		function(file) {$('#new_file').val(file);$('#new_tree').hide();},
		function(directory) {$('#new_file').val(directory);});
	$('#media_file').click(showMedia);
	$('#drivers_file').click(showDrivers);
	$('#disk_file').click(showDisk);
	$('#new_file').click(showNew);
	$('#new_tree').dblclick(hideNew);
   $('body').click(function(event) {
    	if (!$(event.target).closest('#media_file').length) {
      	  $('#media_tree').hide();
    	};
    	if (!$(event.target).closest('#drivers_file').length) {
      	  $('#drivers_tree').hide();
    	};
    	if (!$(event.target).closest('#disk_file').length) {
      	  $('#disk_tree').hide();
    	};
    	if (!$(event.target).closest('#new_file').length) {
      	  $('#new_tree').hide();
    	};
	});
});
</script>