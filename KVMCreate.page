Menu="KVM:1"
Title="Create VM"
---
<?php
$network_cfg = parse_ini_file( "/boot/config/network.cfg" );
if (array_key_exists('sent', $_POST)) {
	$features = array('pae', 'hap');

	$feature = array();
	for ($i = 0; $i < sizeof($features); $i++)
		if (array_key_exists('feature_'.$features[$i], $_POST))
			$feature[] = $features[$i];
			
	$tmp = $lv->domain_new($_POST['domain'], $_POST['media'], $feature, $_POST['nic'], $_POST['disk'], $_POST['usb'], $_POST['usbtab'], $_POST['shares'], $_POST['setup_persistent']);
	if (!$tmp){
		echo "<script type='text/javascript'>$(function() { $('#countdown').html('<font class=\"red\">Error: ".$lv->get_last_error()."</font>');}); </script>";
	} else {
  		$name = $_POST['domain']['name'];
		$res = $lv->get_domain_by_name($name);
		$uuid = libvirt_domain_get_uuid_string($res);
		echo "<script type='text/javascript'>$(function() { $('#countdown').html('<font class=\"green\">New virtual machine $name&nbsp;</a> has been created successfully</font>');}); </script>";
		//echo '<meta http-equiv="refresh" content="1; url=/KVM">';
	}
}

  $ci  = $lv->get_connect_information();
  unset($ci);
  $info = $lv->host_get_node_info();
  $info = $lv->host_get_node_info();
  $maxcpu = (int)$info['cores']*(int)$info['threads'];
  $maxmem = number_format(($info['memory'] / 1048576), 0, '.', ' ');
?>

<div id="content">

<form method="POST">

<table id="form-table" class="tablesorter" style="margin-top:-21px"><thead><th colspan="2">Create New Virtual Machine From Template</th></thead>
<tr>
    <td align="right">Name:&nbsp; </td>
    <td><input type="text" autofocus name="domain[name]" title="name of vitual machine" placeholder="name of vitual machine" /></td>
</tr>

<tr>
    <td align="right">Description:&nbsp; </td>
    <td><input type="text" name="desc" title="description of vitual machine" placeholder="description of vitual machine (optional)" /></td>
</tr>

<tr>
    <td align="right">Install image (iso):&nbsp; </td>
    <td>
		<input type="text" id="media_file" name="media" placeholder="Click and Select cdrom image to install operating system">
	</td>
</tr>

<tr>
	<td></td>
	<td>
		<div id="media_tree" hidden></div>			
	</td>
</tr>

<tr>
	<td align="right">Operating System:&nbsp;</td>
	<td>
		<select onchange="toggle_divs('os', this.value)" name="domain[os]" title="Select domain operating system type">
			<option value="1">Other</option>
			<option value="0" selected="selected">Windows</option>
		</select>
	</td>
</tr>

<tr>
	<td align="right">Architecture:&nbsp;</td>
	<td>
		<select name="domain[arch]" title="Select domain operating system type">
			<option value="0">32bit</option>
			<option value="1" selected="selected">64bit</option>
		</select>
	</td>
</tr>

<tr>
	<td align="right">Persistence:&nbsp;</td>
	<td>
		<select name="domain[persistent]" title="Select domain to be permanent or temporary">
			<option value="0">Temporary</option>
			<option value="1" selected="selected">Permanent</option>
		</select>
	</td>
</tr>

<tr>
    <td align="right">vCPUs:&nbsp; </td>
    <td>
		<select name="domain[vcpus]" title="define number of vpus for domain">
<?php
        for ($i = 1; $i <= $maxcpu; $i++)
            echo '<option value='.$i.'>'.$i.'</option>';
?>
		</select>
	</td>

<tr>
    <td align="right">Features:&nbsp;</td>
    <td>
      	<input class="checkbox" type="checkbox" value="1" name="feature_pae" title="Physical address extension mode allows 32-bit guests to address more than 4 GB of memory"/> PAE (check for 32bit OS)<br />
      	<input class="checkbox" type="checkbox" value="1" name="feature_hap" title="Enable use of Hardware Assisted Paging if available in the hardware" /> HAP (Hardware Assisted Paging)<br />
    </td>
</tr>

<tr id="setup2_os" style="display: none">
    <td></td>
    <td>
			<input class="checkbox" type="checkbox" value="1" name="usbtab" title="mouse coordinates in vm match the pointer position on the real desktop"/> VNC Mouse (check for OS with desktop)
    </td>
</tr>


<tr>
    <td align="right">Memory (MiB):&nbsp;</td>
        <td>
		<select name="domain[mem]" title="define the amount memory">
	<?php
        for ($i = 1; $i <= ($maxmem*2); $i++) {
        		$mem = ($i*512);
            echo '<option value="'.$mem.'">'.$mem.'</option>';
			}
	?>
		</select>
	</td>
</tr>

<tr>
   <td align="right">Max. Mem (MiB):&nbsp;</td>
	<td>
		<select name="domain[maxmem]" title="define the maximun amount of memory">
	<?php
        for ($i = 1; $i <= ($maxmem*2); $i++) {
        		$mem = ($i*512);
            echo '<option value="'.$mem.'">'.$mem.'</option>';
			}
	?>
		</select>
	</td> 
</tr>

<tr>
    <td align="right">Clock offset:&nbsp;</td>
    <td>
        <select name="domain[clock]" title="how the guest clock is synchronized to the host">
          <option value="localtime">localtime</option>
          <option value="utc">UTC</option>
        </select>
    </td>
</tr>
<tr>
    <td align="right"><b>Network Settings:&nbsp;</b></td>
    <td>
      <select onchange="change_divs('network', this.value)">
	<option value="0">Auto</option>
	<option value="1">Manual</option>
      </select>
    </td>
</tr>	
<tr id="setup_network" style="display: none">
    <td>&nbsp;</td>
    <td>
        <table class="tablesorter"  style="margin-top:0px;margin-left:-33px">
			<tr>
		   	<td align="right">MAC:&nbsp;</td>
   			<td>
					<input type="text" name="nic[mac]" title="random mac, you can supply your own" value="<?php echo $lv->generate_random_mac_addr() ?>" id="nic_mac_addr" />
				</td>
			</tr>
			<tr>
   			<td align="right">NIC:&nbsp;</td>
   			<td>
				<select name="nic[type]" title="virtio unless passing through nic">
					<?php
					$models = $lv->get_nic_models();
      	  		for ($i = 0; $i < sizeof($models); $i++)
         	       echo '<option value="'.$models[$i].'">'.$models[$i].'</option>';
					?>
      		</select>
   			</td>
			</tr>
			<tr>
   			<td align="right" >Bridge:&nbsp;</td>
			   <td>
					<input type="text" value="<?=$network_cfg['BRNAME'];?>" name="nic[net]" placeholder="name of bridge in unRAID" title="name of bridge in unRAID automatically filled in" />			
			   </td>
			</tr>
        </table>
    </td>
</tr>

<tr>
    <td align="right"><b>Disk Settings:&nbsp;</b></td>
    <td>
      <select onchange="change_divs('disk', this.value)">
	<option value="1">Create New Disk</option>
	<option value="0">Use Existing Disk</option>
      </select>
    </td>
</tr>

<tr id="setup_disk" style="display: table-row">
	<td></td>
   <td>
   <table class="tablesorter"  style="margin-top:0px;margin-left:-72px" >
     
	<tr>
		<td align="right">Disk location:&nbsp;</td>
		<td>
			<input type="text" id="new_disk_file" name="disk[new]" placeholder="Enter image to use for virtual machine">
		</td>
	</tr>

	<tr>
		<td></td>
		<td>
			<div id="new_disk_tree" hidden></div>			
		</td>
	</tr>

	<tr>
		<td align="right">Size:&nbsp;</td>
		<td align="left"><input type="text" name="disk[size]" placeholder="e.g. 10M or 1G"></td>
	</tr>

	<tr>
		<td align="right">Disk type:&nbsp;</td>
		<td>
		   <select name="disk[driver]" title="type of storage image">
				<option value="qcow2">qcow2</option>
				<option value="raw">raw</option>
				<option value="qcow">qcow</option>
		   </select>
		</td>
	</tr>

	<tr>
		<td align="right">Dev name:&nbsp;</td>
		<td>
			<input type="text" value="hda" name="disk[dev]" placeholder="name of disk inside vm" title="name of disk inside vm" />
		</td>
	</tr>
	
	</table>
   </td>
</tr>

<tr id="setup2_disk" style="display: none">
    <td>&nbsp;</td>
    <td>
        <table class="tablesorter"  style="margin-top:0px;margin-left:-72px" >

<tr>
	<td align="right">Existing disk:&nbsp;</td>
	<td>
		<input type="text" id="disk_file" name="disk[image]" placeholder="Enter image to use for virtual machine">
	</td>
</tr>


<tr>
	<td></td>
	<td>
		<div id="disk_tree" hidden></div>			
	</td>
</tr>

<tr>
	<td align="right">Dev name:&nbsp;</td>
	<td>
		<input type="text" value="hda" name="disk[dev]" placeholder="name of disk inside vm" title="name of disk inside vm" />
	</td>
</tr>
	</table>
    </td>
</tr>

<tr>
    <td align="right"><b>USB Devices:&nbsp;</b></td>
    <td>
      <select onchange="change_divs('usb', this.value)">
	<option value="0">No</option>
	<option value="1">Yes</option>
      </select>
    </td>
</tr>
<tr id="setup_usb" style="display: none">
    <td>&nbsp;</td>
    <td>
        <table class="tablesorter" style="margin-top:0px;margin-left:96px">
<tr>
	<td align="left">
<?php

function usb_checkbox($usb, $key)
{
	$usb = strstr($usb, 'ID' );
	$usb = ltrim($usb, 'ID');
	$vendor = substr($usb,1,4);
	$product = substr($usb,6,10);
	if ($usb) echo '<input class="checkbox" type="checkbox" value="'.$vendor.','.$product.'" name="usb['.$key.']" />'.$usb.'<br />';
}
$usb = shell_exec('lsusb');
$usb = explode("\n", $usb);
array_walk($usb, 'usb_checkbox');
?>
  	</td>
</tr>
	</table>
    </td>
</tr>

<tr id="setup_os" hidden>
    <td align="right"><b>9p Share Settings:&nbsp;</b></td>
    <td>
      <select onchange="change_divs('shares', this.value)">
	<option value="0">No</option>
	<option value="1">Yes</option>
      </select>
    </td>
</tr>
	
<tr id="setup_shares" style="display: none">
    <td>&nbsp;</td>
    <td>
        <table class="tablesorter"  style="margin-top:0px;margin-left:-96px">
<tr>
	<td align="right">unRAID share:&nbsp;</td>
	<td>
		<input type="text" value="" name="shares[source]" placeholder="e.g. /mnt...(won't work with windows)" title="path of unRAID share" />
	</td>
</tr>

<tr>
	<td align="right">Mount tag:&nbsp;</td>
	<td>
		<input type="text" value="" name="shares[target]" placeholder="e.g. shares (name of mount tag inside vm)" title="mount tag inside vm" />
	</td>
</tr>
        </table>
    </td>
</tr>

<tr align="right">
    <td colspan="1">
 	   <input type="submit" value="Create VM" />
    </td>
</tr>

	</table>
		<input type="hidden" name="sent" value="1" />
	</form>

</div>
